version: "3"

services:
  # nginx:
  #   build: ./nginx
  #   container_name: meetspace_nginx
  #   ports:
  #     - "8010:8010"

  redis:
    image: redis:latest
    restart: always
    container_name: meetspace_redis
    ports:
      - "6379:6379"
    command: /bin/sh -c "redis-server --requirepass $$REDIS_PASSWORD"
    environment:
      REDIS_PASSWORD: "redis123"

  postgres:
    image: postgres:latest
    restart: always
    container_name: meetspace_postgres
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    # networks:
    #   - my-network

  # elasticsearch:
  #   image: elasticsearch:7.14.2
  #   container_name: elasticsearch
  #   ports:
  #     - "9200:9200"
  #   environment:
  #     - discovery.type=single-node
  #     - ELASTIC_USERNAME=elastic
  #     - ELASTIC_PASSWORD=elastic
  #     - xpack.security.enabled=true

  # zookeeper:
  #   image: wurstmeister/zookeeper
  #   container_name: zookeeper
  #   restart: always
  #   ports:
  #     - "2181:2181"

  # kafka:
  #   image: wurstmeister/kafka
  #   container_name: kafka
  #   restart: always
  #   ports:
  #     - "9092:9092"
  #   environment:
  #     KAFKA_ADVERTISED_HOST_NAME: kafka
  # KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
  # # KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
  # # KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
  # # KAFKA_LISTENERS: PLAINTEXT://0.0.0.0:9092,PLAINTEXT_HOST://kafka:29092
  # # KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  # volumes:
  #   - /var/run/docker.sock:/var/run/docker.sock
  # depends_on:
  #   - zookeeper

# networks:
#   my-network:
#     driver: bridge

volumes:
  minio-data:
    driver: local
