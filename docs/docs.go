// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/v1/auth/forgot-password": {
            "post": {
                "description": "ForgotPassword",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "ForgotPassword",
                "responses": {
                    "200": {
                        "description": "Login user successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/v1/auth/login": {
            "post": {
                "description": "Login user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "login-user",
                "parameters": [
                    {
                        "description": "User login details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login user successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/v1/auth/logout": {
            "post": {
                "description": "UserLogout User account",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "UserLogout User account",
                "responses": {
                    "200": {
                        "description": "Login user successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/v1/auth/register": {
            "post": {
                "description": "Register User account",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "register-user",
                "parameters": [
                    {
                        "description": "User registration details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.RegisterRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Register user successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/v1/auth/send-email": {
            "post": {
                "description": "Send email to user",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "responses": {
                    "200": {
                        "description": "Login user successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/v1/auth/verify-email": {
            "post": {
                "description": "Verify email otp.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "responses": {
                    "200": {
                        "description": "Login user successfully"
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "500": {
                        "description": "Internal server error"
                    }
                }
            }
        },
        "/v1/chat/messages": {
            "get": {
                "description": "Register User account",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat-Message"
                ],
                "summary": "Register User account",
                "parameters": [
                    {
                        "description": "User registration details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.GetChatMessageRequestBody"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/chat/messages/{room_id}": {
            "get": {
                "description": "GetChatMessageByRoomId",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat-Message"
                ],
                "summary": "GetChatMessageByRoomId",
                "parameters": [
                    {
                        "description": "User registration details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.GetChatMessageRequestBody"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/chat/room/contact": {
            "get": {
                "description": "UserLogin User account",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat-Room"
                ],
                "summary": "UserLogin User account",
                "parameters": [
                    {
                        "description": "User login details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.LoginRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/chat/room/groups": {
            "post": {
                "description": "UserLogin User account",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat-Group"
                ],
                "summary": "UserLogin User account",
                "parameters": [
                    {
                        "description": "User login details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.LoginRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/chat/rooms": {
            "get": {
                "description": "GetChatRooms",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat-Room"
                ],
                "summary": "GetChatRooms",
                "parameters": [
                    {
                        "description": "User login details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.LoginRequest"
                        }
                    }
                ],
                "responses": {}
            },
            "post": {
                "description": "CreateChatRoom",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat-Room"
                ],
                "summary": "CreateChatRoom",
                "parameters": [
                    {
                        "description": "User login details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.LoginRequest"
                        }
                    }
                ],
                "responses": {}
            },
            "delete": {
                "description": "DeleteChatRoom",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Chat-Room"
                ],
                "summary": "DeleteChatRoom",
                "parameters": [
                    {
                        "description": "User login details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.LoginRequest"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/client/users": {
            "get": {
                "description": "GetClientUsers account",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client-User"
                ],
                "summary": "GetClientUsers account",
                "responses": {}
            },
            "post": {
                "description": "ClientAddUser account",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client-User"
                ],
                "summary": "ClientAddUser account",
                "parameters": [
                    {
                        "description": "User registration details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.ClientAddUser"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/clients": {
            "get": {
                "description": "GetAllClients User account",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "summary": "GetAllClients User account",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Client's company name",
                        "name": "company_name",
                        "in": "query"
                    },
                    {
                        "description": "GetAllClients login details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.ClientCreateData"
                        }
                    }
                ],
                "responses": {}
            },
            "post": {
                "description": "UserLogin User account",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "summary": "UserLogin User account",
                "parameters": [
                    {
                        "description": "User login details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.ClientCreateData"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/clients/{id}": {
            "get": {
                "description": "GetClientById User account",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Client"
                ],
                "summary": "GetClientById User account",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Client ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {}
            }
        },
        "/v1/user/check-email": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "User create",
                "parameters": [
                    {
                        "description": "User create details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.CreateUserData"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/users": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "User create",
                "parameters": [
                    {
                        "description": "User create details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.CreateUserData"
                        }
                    }
                ],
                "responses": {}
            },
            "put": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "User create",
                "parameters": [
                    {
                        "description": "User create details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.CreateUserData"
                        }
                    }
                ],
                "responses": {}
            },
            "post": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "User create",
                "parameters": [
                    {
                        "description": "User create details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.CreateUserData"
                        }
                    }
                ],
                "responses": {}
            }
        },
        "/v1/users/{id}": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "User create",
                "parameters": [
                    {
                        "description": "User create details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.CreateUserData"
                        }
                    }
                ],
                "responses": {}
            }
        }
    },
    "definitions": {
        "models.Client": {
            "type": "object",
            "properties": {
                "client_user_id": {
                    "type": "string"
                },
                "company_domain": {
                    "type": "string"
                },
                "company_name": {
                    "type": "string"
                },
                "company_size": {
                    "type": "integer"
                },
                "country": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                }
            }
        },
        "types.ClientAddUser": {
            "type": "object",
            "properties": {
                "client_id": {
                    "type": "string"
                },
                "created_by": {
                    "$ref": "#/definitions/models.Client"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "updated_by": {
                    "$ref": "#/definitions/models.Client"
                }
            }
        },
        "types.ClientCreateData": {
            "type": "object",
            "properties": {
                "company_name": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "types.CreateUserData": {
            "type": "object",
            "properties": {
                "client_id": {
                    "type": "string"
                },
                "created_by": {
                    "$ref": "#/definitions/models.Client"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "role": {
                    "type": "string"
                },
                "updated_by": {
                    "$ref": "#/definitions/models.Client"
                }
            }
        },
        "types.GetChatMessageRequestBody": {
            "type": "object",
            "properties": {
                "chat_room_id": {
                    "type": "string"
                },
                "current_user_id": {
                    "type": "string"
                }
            }
        },
        "types.LoginRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "types.RegisterRequest": {
            "type": "object",
            "required": [
                "email",
                "first_name",
                "last_name",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string",
                    "minLength": 6
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        },
        "OAuth2Application": {
            "type": "oauth2",
            "flow": "application",
            "tokenUrl": "https://example.com/oauth/token",
            "scopes": {
                "admin": " Grants read and write access to administrative information",
                "write": " Grants write access"
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "",
	Description:      "",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
